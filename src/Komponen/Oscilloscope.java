/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Komponen;

//import java.awt.BasicStroke;

import Komponen.Resistor.NilaiResistor;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.image.ImageObserver;
import javax.swing.JPanel;
import simulatorrangkaianlistrik.Rangkaian;

//import java.awt.Color;
//import java.awt.Graphics;
//import java.awt.Graphics2D;
//import java.awt.Polygon;
//import java.awt.geom.Line2D;
//import javax.swing.JPanel;

/**
 *
 * @author Agung DP
 */
public class Oscilloscope extends javax.swing.JFrame {
    /**
     * Creates new form Oscilloscope
     */
    int aksi = 0;
    
    public Oscilloscope() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputtegangan = new javax.swing.JTextField();
        buttontegangan = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        refresh = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(inputtegangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, 90, -1));

        buttontegangan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        buttontegangan.setText("OK");
        buttontegangan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonteganganMouseClicked(evt);
            }
        });
        buttontegangan.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                buttonteganganStateChanged(evt);
            }
        });
        buttontegangan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                buttonteganganItemStateChanged(evt);
            }
        });
        buttontegangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonteganganActionPerformed(evt);
            }
        });
        getContentPane().add(buttontegangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 270, 50, -1));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 290, 220));

        refresh.setText("refresh");
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });
        getContentPane().add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 80, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/BACK_ICON.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/oscilloscope.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void buttonteganganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonteganganMouseClicked
        // TODO add your handling code here:x
        if(aksi==1){
            Plot.updatepanel();
        }
        aksi=0;
        
        double nilai = Double.parseDouble(inputtegangan.getText());
        jLabel2.setText(inputtegangan.getText());
        Plot.setAmplitudo(nilai);
        Plot.setFrekuensi(100);
        
        Graphics kurva = jPanel1.getGraphics();
        double amplitudo1 = Plot.getAmplitudo();
        double frekuensi1 = Plot.getFrekuensi();
        Polygon p = new Polygon();
        for (int x = -144; x <= 144; x++) {
            p.addPoint(x + 145, 110 - (int) (amplitudo1 * Math.sin((x / 100.0) * frekuensi1 * Math.PI)));
        }
        kurva.setColor(Color.red);
        kurva.drawPolyline(p.xpoints, p.ypoints, p.npoints);
      
    }//GEN-LAST:event_buttonteganganMouseClicked

    private void buttonteganganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonteganganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonteganganActionPerformed

    private void buttonteganganStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_buttonteganganStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_buttonteganganStateChanged

    private void buttonteganganItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_buttonteganganItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonteganganItemStateChanged

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
        // TODO add your handling code here:
        Plot.updatepanel();
    }//GEN-LAST:event_refreshMouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        setVisible(false);
        //Rangkaian.labelnilaihambatan.setText(Long.toString(NilaiResistor.getHambatanMinimum())+" volt");
    }//GEN-LAST:event_jLabel3MouseClicked

//    public static class Terima{
//        private static double amplitudo;
//        private static double frekuensi;
//        
//        public static void setAmplitudo(double nilai){
//            Terima.amplitudo = nilai;
//        }
//        public static void setFrekuensi(double nilai){
//            Terima.frekuensi = nilai/50;
//        }
//        public static double getFrekuensi(){
//            return frekuensi;
//        }
//        public static double getAmplitudo(){
//            return amplitudo;
//        }
//    }
    

//        @Override
//    public void paint (Graphics g) {
//        super.paint(g);
//        double amplitudo1 = Plot.getAmplitudo();
//        double frekuensi1 = Plot.getFrekuensi();
////        g.drawLine(10, 100, 380, 100);
////        g.drawLine(200, 30, 200, 190);
////
////        g.drawLine(380, 100, 370, 90);
////        g.drawLine(380, 100, 370, 110);
////        g.drawLine(200, 30, 190, 40);
////        g.drawLine(200, 30, 210, 40);
////
////        g.drawString("X", 360, 80);
////        g.drawString("Y", 220, 40);
//
//        Polygon p = new Polygon();
//        Polygon p2 = new Polygon();
//
//       for (int x = -144; x <= 144; x++) {
//            p.addPoint(x + 197, 192 - (int) (amplitudo1 * Math.sin((x / 100.0) * frekuensi1 * Math.PI)));
//
//        }
//
////        for (int x = -170; x <= 170; x++) {
////            p2.addPoint(x + 200, 100 - (int) (50 * Math.cos((x / 100.0) * 2 * Math.PI)));
////
////        }
//        
//        //g.setStroke(new BasicStroke(10));
//        g.setColor(Color.red);
//        g.drawPolyline(p.xpoints, p.ypoints, p.npoints);
//        
////        g.drawString("-2\u03c0", 95, 115);
////        g.drawString("2\u03c0", 305, 115);
////        g.drawString("0", 200, 115);
////
////        g.setColor(Color.blue);
////        g.drawPolyline(p2.xpoints, p2.ypoints, p2.npoints);
//        
//        
////        Graphics2D g2=(Graphics2D)g;
////        int x=250;
////        int y=200;
////        g2.setColor(Color.YELLOW);
////        g2.setStroke(new BasicStroke(10));
////        g2.draw(new Line2D.Float(300, 200, 800, 90));
////        Polygon panah = new Polygon();
////        panah.addPoint(350,300);
////        panah.addPoint(370,250);
////        panah.addPoint(420,250);
////        panah.addPoint(420,220);
////        panah.addPoint(440,220);
////        panah.addPoint(440,120);
////        panah.addPoint(410,100);
////        panah.addPoint(440,80);
////        panah.addPoint(450,80);
////        panah.addPoint(450,220);
////        panah.addPoint(490,220);
////        panah.addPoint(490,250);
////        panah.addPoint(530,250);
////        panah.addPoint(540,270);
////        panah.addPoint(840,270);
////        panah.addPoint(840,290);
////        panah.addPoint(570,290);
////        panah.addPoint(570,300);
////        g2.draw(panah);
////        g2.fill(panah);
//        
//        //for(int i=0;i<250;i=i+50){
////            g.drawLine(x,y,x,y);
////            g.drawLine(x,y,50+i,y-i);
////            g.drawLine(x,y,450-i,y+i);
////            g.drawLine(x,y,450-i,y-i);
////        }
//    }
    
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Oscilloscope.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Oscilloscope.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Oscilloscope.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Oscilloscope.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Oscilloscope().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton buttontegangan;
    public static javax.swing.JTextField inputtegangan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    protected static javax.swing.JPanel jPanel1;
    private javax.swing.JButton refresh;
    // End of variables declaration//GEN-END:variables
}
